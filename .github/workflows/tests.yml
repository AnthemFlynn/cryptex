name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Lint with ruff
      run: |
        uv run ruff check src/ tests/

    - name: Format check with ruff
      run: |
        uv run ruff format --check src/ tests/

    - name: Type check with mypy
      run: |
        uv run mypy src/

    - name: Test with pytest
      run: |
        uv run pytest tests/ -v --cov=src/cryptex --cov-report=xml --cov-report=term-missing

    - name: Security check with bandit
      run: |
        uv run bandit -r src/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-tests:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python 3.11
      run: uv python install 3.11

    - name: Install package
      run: |
        uv build
        uv pip install dist/*.whl

    - name: Test package installation
      run: |
        python -c "import cryptex; print('✅ Package imports successfully')"
        python -c "from cryptex import protect_secrets, list_patterns; print('✅ Core API works')"

    - name: Run examples
      run: |
        python examples/basic_usage.py
        python examples/real_world_usage.py

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python 3.11
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync --dev

    - name: Run security tests
      run: |
        uv run pytest tests/security/ -v

    - name: Security scan with safety
      run: |
        uv run safety check --json --output safety-report.json
      continue-on-error: true